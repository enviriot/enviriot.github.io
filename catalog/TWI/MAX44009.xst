<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<xst path='/$YS/TYPES/TWI' s='{"Children":"/$YS/TYPES/TWI"}' m='{"attr":69}' >
  <i n='MAX44009' s='{"Children":{},"default":0,"editor":"Enum","enum":"TwiStatus","hint":"Ambient Light Sensor","manifest":{"MQTT-SN":{"tag":"---"},"type":"TWI/MAX44009","TWI":{"addr":0}},"mi":{"TWI":{"attr":1,"mi":{"addr":{"attr":1,"default":0,"type":"Integer"}}}},"src":"class MAX44009{\r\n  constructor(){\r\n    setTimeout(this.Init.bind(this), 500*(1+Math.random()));\r\n  }\r\n  Init(){\r\n    var addr=this.GetField(null,\"TWI.addr\")==0?0x4A:0x4B;\r\n    this.TwiReq([addr, 0x01, 0x01, 0x00, 0x02, 0x03]);  // Automatic mode\r\n    setTimeout(this.Read.bind(this), 800*(1+Math.random()));    \r\n  }\r\n  Read(){\r\n    var addr=this.GetField(null,\"TWI.addr\")==0?0x4A:0x4B;\r\n    this.TwiReq([addr, 0x03, 0x01, 0x01, 0x03])  // Read byte1\r\n      .then(r =&gt; {\r\n        this.b1 = r[4];\r\n        this.TwiReq([addr, 0x03, 0x01, 0x01, 0x04])  // Read byte2\r\n          .then(r =&gt; {\r\n            this.SetState(null, 1);\r\n            let e = this.b1&gt;&gt;4;\r\n            let m = ((this.b1 &amp; 0x0F)&lt;&lt;4) | (r[4] &amp; 0x0F);\r\n            this.SetState(\"I\",Math.round((m&lt;&lt;e)*0.045));\r\n            setTimeout(this.Read.bind(this), 60000);\r\n          },\r\n          e=&gt;{\r\n            this.SetState(null, 0);\r\n            setTimeout(this.Init.bind(this), 60000*(1+Math.random()));\r\n        });\r\n      },\r\n      e=&gt;{\r\n        this.SetState(null, 0);\r\n        setTimeout(this.Init.bind(this), 60000*(1+Math.random()));\r\n    });\r\n  }\r\n}\r\n"}' m='{"attr":69,"type":"Ext/TwiDev"}' ver='0.4.1909.5001' />
</xst>