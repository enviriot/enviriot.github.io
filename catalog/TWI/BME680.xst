<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<xst path='/$YS/TYPES/TWI' m='{"attr":69}' >
  <i n='BME680' s='{"Children":{},"hint":"Temperature, Humidity, Pressure and Gas Sensor","default":0,"editor":"Enum","enum":"TwiStatus","manifest":{"MQTT-SN":{"tag":"---"},"type":"TWI/BME680","TWI":{"addr":0}},"mi":{"TWI":{"attr":1,"mi":{"addr":{"attr":1,"default":1,"type":"Integer"}}}},"src":"class BME680{\r\n  constructor(){\r\n    this.lt1 = [1.0, 1.0, 1.0, 1.0, 1.0, 0.99, 1.0, 0.992,  1.0, 1.0, 0.998, 0.995, 1.0, 0.99, 1.0, 1.0];\r\n    this.lt2 = [8000000, 4000000, 2000000, 1000000, 499500.4995, 248262.1648, 125000, 63004.03226, 31281.28128, 15625, 7812.5, 3906.25, 1953.125, 976.5625, 488.28125, 244.140625];\r\n    setTimeout(this.Init.bind(this), 500*(1+Math.random()));\r\n  }\r\n  Init(){\r\n    this.addr=0x76 | (this.GetField(null,\"TWI.addr\") &amp; 1);\r\n\r\n    this.TwiReq([this.addr, 0x00, 0x02, 0x00, 0xE0, 0xB6]);  // Reset\r\n    this.TwiReq([this.addr, 0x00, 0x01, 0x01, 0xD0])\t\t// Read chipID\r\n      .then(this.Resp0.bind(this), this.RespE.bind(this))\r\n      .then(this.Resp1.bind(this), this.RespE.bind(this))\r\n      .then(this.Resp2.bind(this), this.RespE.bind(this))\r\n      .then(this.Resp3.bind(this), this.RespE.bind(this));\r\n  }\r\n  Resp0(buf){\r\n    if(buf[4]==0x61){\r\n      return this.TwiReq([this.addr, 0x03, 0x01, 0x17, 0x8A]);\r\n    } else {\r\n      this.SetState(null,0);\r\n      setTimeout(this.Read0.bind(this), 90000*(1+Math.random()));\r\n    }\r\n  }\r\n  Resp1(buf){\r\n    this.T2=this.u2i16(buf[4] | (buf[5]&lt;&lt;8));\r\n    this.T3=this.u2i8(buf[6]);\r\n\r\n    this.P1=buf[8] | (buf[9]&lt;&lt;8);\r\n    this.P2=this.u2i16(buf[10] | (buf[11]&lt;&lt;8));\r\n    this.P3=this.u2i8(buf[12]);\r\n    this.P4=this.u2i16(buf[14] | (buf[15]&lt;&lt;8));\r\n    this.P5=this.u2i16(buf[16] | (buf[17]&lt;&lt;8));\r\n    this.P7=this.u2i8(buf[18]);\r\n    this.P6=this.u2i8(buf[19]);\r\n    this.P8=this.u2i16(buf[22] | (buf[23]&lt;&lt;8));\r\n    this.P9=this.u2i16(buf[24] | (buf[25]&lt;&lt;8));\r\n    this.P10 = buf[26];\r\n    return this.TwiReq([this.addr, 0x03, 0x01, 0x0E, 0xE1]);\r\n  }\r\n  Resp2(buf){\r\n    this.H2=(buf[4]&lt;&lt;4) | (buf[5] &gt;&gt; 4);\r\n    this.H1=(buf[5] &amp; 0x0F) | (buf[6] &lt;&lt; 4);\r\n    this.H3=this.u2i8(buf[7]);\r\n    this.H4=this.u2i8(buf[8]);\r\n    this.H5=this.u2i8(buf[9]);\r\n    this.H6=buf[10];\r\n    this.H7=this.u2i8(buf[11]);\r\n    this.T1=buf[12] | (buf[13]&lt;&lt;8);\r\n\r\n    this.GH2=this.u2i16(buf[14] | (buf[15]&lt;&lt;8));\r\n    this.GH1=this.u2i8(buf[16]);\r\n    this.GH3=this.u2i8(buf[17]);\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x72, 0x01]); // Humidity oversampling x1\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x74, 0x54]); // Pressure oversampling x16, Temperature oversampling x2\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x75, 0x0C]); // IIRFilter 3\r\n\r\n    return this.TwiReq([this.addr, 0x03, 0x01, 0x04, 0x00]);\r\n  }\r\n  Resp3(buf){\r\n    this.res_heat_val=this.u2i8(buf[4]);\r\n    this.res_heat_range=(buf[6] &gt;&gt; 4) &amp; 0x03;\r\n    this.range_sw_err=buf[8] &gt;&gt; 4;\r\n\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x71, 0x10]);  // 1 heater set point\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x64, 0x59]);  //Gas_wait_1 = 100mS\r\n    \r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x5A, this.TT2byte(300)]);  //Resheat_1 = 300°C\r\n\r\n    setTimeout(this.Read.bind(this),200);\r\n  }\r\n  Read(){\r\n    this.TwiReq([this.addr, 0x01, 0x02, 0x00, 0x74, 0x55]); // Pressure oversampling x16, Temperature oversampling x2, force mode\r\n    setTimeout(this.Read2.bind(this), 150);\r\n  }\r\n  Read2(){\r\n    this.TwiReq([this.addr, 0x03, 0x01, 0x0F, 0x1D]).then(this.RespM.bind(this), this.RespE.bind(this));\r\n  }\r\n  RespM(buf){\r\n    if((buf[4] &amp; 0x80)==0x80){\r\n      let adc, var1, var2, var3, t_fine, h;\r\n      adc = (buf[9] &lt;&lt; 12) | (buf[10] &lt;&lt; 4) | (buf[11] &gt;&gt; 4);\r\n      \r\n      var1 = adc / 16 - this.T1;\r\n      t_fine = var1 * (this.T2 + var1 * this.T3 / 4096) / 1024 - 3072; // -0.6 Correction\r\n      this.SetState(\"T\", Math.round(t_fine * 5 / 256 ) / 100);\r\n\r\n      adc = (buf[12] &lt;&lt; 8) | buf[13];\r\n      var3 = t_fine * 5 / 25600;\r\n      var1 = (adc - this.H1 * 16 - var3 * this.H3 / 2) * ((this.H4 +  var3 * this.H5 / 64) * var3 + 16384) * this.H2 / 1024;\r\n      var2 = (this.H6 / 128 + var3 * this.H7 / 16384) * var1 / 16384 * var1 / 16384;\r\n      var1 = (var1 + var2 / 2) / 41943.04;\r\n\t  h = var1/100;\r\n      this.SetState(\"H\", var1&lt;=10000?(var1&gt;=0?Math.round(var1)/100:0):100);\r\n\r\n      adc = (buf[6] &lt;&lt; 12) | (buf[7] &lt;&lt; 4) | (buf[8] &gt;&gt; 4);\r\n\r\n      var1 = t_fine / 2 - 64000;\r\n      var2 = (var1 * this.P6 / 65536 + this.P5 * 4) * var1 / 8 + this.P4 * 65536;\r\n      var1 = (1 + var1 / 131072 * var1 / 131072 * (this.P3 * 2 + this.P2) / 131072) * this.P1;\r\n\r\n      var3 = (1048576 - adc - var2 / 4096) * 6250 / var1;\r\n      var3 = var3 * ( 1 + (this.P8 + var3 * (this.P9 + var3 * this.P10 / 8192 ) / 65536) / 524288) + this.P7 * 8;\r\n\r\n      this.SetState(\"P\", Math.round(var3*15/2)/1000);\r\n\r\n      if((buf[18] &amp; 0x10)!=0){\r\n        adc = (buf[17]&lt;&lt;2) | (buf[18]&gt;&gt;6);\r\n        let range = buf[18]&amp;0x0F;\r\n\r\n        var1 = (1340.0 + 5.0 * this.range_sw_err) * this.lt1[range];\r\n        var1 = var1 * this.lt2[range] / (adc - 512.0 + var1);\r\n        var2 = 750000;\r\n        this.SetState(\"G\", Math.round(Math.pow(10, 3-0.4*Math.log(var1/var2)))/100);\r\n        setTimeout(this.Read.bind(this), 6000);\r\n      } else {\r\n        setTimeout(this.Read.bind(this), 1000);\r\n      }\r\n    \r\n      this.SetState(null,1);\r\n    } else if((buf[4] &amp;&amp; 0x60)!=0){\r\n      setTimeout(this.Read2.bind(this), 50);\r\n    } else {\r\n      RespE(null);\r\n    }\r\n  }\r\n  RespE(e){\r\n    this.SetState(null,0);\r\n    setTimeout(this.Init.bind(this), 60000*(1+Math.random()));\r\n  }\r\n  u2i16(u){\r\n    return (u&amp;0x7FFF)-(u&amp;0x8000);\r\n  }\r\n  u2i8(u){\r\n    return (u&amp;0x7F)-(u&amp;0x80);\r\n  }\r\n  TT2byte(T){\r\n    let var1, var2, var3, var4, var5, heatr_res_x100;\r\n    if(T&lt;200){\r\n      T=200;\r\n    } else if(T&gt;400){\r\n      T=400;\r\n    }\r\n    \r\n    var1 = (10 * this.GH3 / 1000) * 256;  // for 10 grad C\r\n    var2 = (this.GH1 + 784) * (((((this.GH2 + 154009) * T * 5) / 100) + 3276800) / 10);\r\n    var3 = var1 + (var2 / 2);\r\n    var4 = (var3 / (this.res_heat_range + 4));\r\n    var5 = (131 * this.res_heat_val) + 65536;\r\n    heatr_res_x100 = (((var4 / var5) - 250) * 34);\r\n   \r\n    return (heatr_res_x100 + 50) / 100;\r\n  }\r\n}\r\n\r\n"}' m='{"attr":69,"type":"Ext/TwiDev"}' ver='0.4.1907.16000' />
</xst>