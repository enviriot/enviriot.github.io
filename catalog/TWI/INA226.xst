<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<xst path='/$YS/TYPES/TWI/INA226' s='{"Children":{},"default":0,"editor":"Enum","enum":"TwiStatus","manifest":{"MQTT-SN":{"tag":"---"},"TWI":{"addr":64},"type":"TWI/INA226"},"mi":{"TWI":{"attr":1,"mi":{"addr":{"attr":1,"default":0,"type":"Integer"}}}},"src":"class INA226{\r\n  constructor(){\r\n    setTimeout(this.Init.bind(this), 500*(1+Math.random()));\r\n  }\r\n  Init(){\r\n    this.addr=(this.GetField(null,\"TWI.addr\") &amp; 0x7F);\r\n    this.TwiReq([this.addr, 0x00, 0x01, 0x02, 0xFF])\t\t// Read chipID\r\n      .then(this.Init0.bind(this), this.RespE.bind(this))   // Write Configuration register\r\n      .then(this.Init1.bind(this), this.RespE.bind(this));\r\n  }\r\n  Init0(buf){\r\n    if(buf[1] == 0x20 &amp;&amp; buf[4] == 0x22 &amp;&amp; buf[5] == 0x60){\r\n      //this.SetState(null,1);\r\n      //average = 1024, VBUSCT = 8.244ms, VSHCT = 8.244 ms, Mode Shunt and Bus, Continuous\r\n      return this.TwiReq([this.addr, 0x00, 0x03, 0x00, 0x00, 0x4F, 0xFF]);\r\n    }\r\n  }\r\n  Init1(buf){\r\n    setTimeout(this.Read.bind(this), 200);\r\n  }\r\n  Read(){\r\n    this.TwiReq([this.addr, 0x03, 0x01, 0x02, 0x01]).then(this.RespM.bind(this), this.RespE.bind(this));\r\n  }\r\n  RespM(buf){\r\n    this.SetState(null, 1);\r\n    let tmp = (buf[4] &lt;&lt; 8) | buf[5];\r\n    this.SetState(\"I\", ((tmp&amp;0x8000)?(tmp-65535):tmp) * 0.0000025);\r\n    this.TwiReq([this.addr, 0x03, 0x01, 0x02, 0x02]).then(this.RespM2.bind(this), this.RespE.bind(this));\r\n  }\r\n  RespM2(buf){\r\n    let tmp = (buf[4] &lt;&lt; 8) | buf[5];\r\n    this.SetState(\"V\", ((tmp&amp;0x8000)?(tmp-65535):tmp) * 0.00125);\r\n    setTimeout(this.Read.bind(this), 4000);\r\n  }\r\n  \r\n  RespE(e){\r\n    this.SetState(null, 0);\r\n    setTimeout(this.Init.bind(this), 60000*(1+Math.random()));\r\n  }\r\n}"}' m='{"attr":69,"type":"Ext/TwiDev"}' ver='0.4.2208.8649' />